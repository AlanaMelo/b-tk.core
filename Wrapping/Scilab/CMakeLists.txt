FIND_PACKAGE(Scilab REQUIRED)

SET(SCILAB_TOOLBOX_NAME "btk")

IF(SCILAB_ROOT)

# Look for all MEX functions
FILE(GLOB SCILAB_MEX_SRCS "${BTK_SOURCE_DIR}/Wrapping/Matlab/*.cpp")
# And the the internal functions
FILE(GLOB SCILAB_CXX_SRCS "${BTK_SOURCE_DIR}/Wrapping/Matlab/*.cxx")

#SET(SCILAB_MEX_SRCS "${BTK_SOURCE_DIR}/Wrapping/Matlab/btkAppendMetaData.cpp")
#SET(SCILAB_CXX_SRCS "${BTK_SOURCE_DIR}/Wrapping/Matlab/btkMXEvent.cxx")

# Generate the gateway file: libBTK.c
SET(LIBBTKC_PATH "${CMAKE_BINARY_DIR}/Wrapping/Scilab/lib${SCILAB_TOOLBOX_NAME}.c")
FILE(WRITE ${LIBBTKC_PATH} "\#include <mex.h>\nstatic int direct_gateway(char *fname,void F(void)) { F();return 0;};\n")
FOREACH(FUNCTION ${SCILAB_MEX_SRCS})
  GET_FILENAME_COMPONENT(FUNC ${FUNCTION} NAME_WE)
  FILE(APPEND ${LIBBTKC_PATH} "extern Gatefunc mex_${FUNC};\n")
ENDFOREACH(FUNCTION)
FILE(APPEND ${LIBBTKC_PATH} "static GenericTable Tab[]={\n")
FOREACH(FUNCTION ${SCILAB_MEX_SRCS})
  GET_FILENAME_COMPONENT(FUNC ${FUNCTION} NAME_WE)
  FILE(APPEND ${LIBBTKC_PATH} "  {mex_gateway,mex_${FUNC},\"${FUNC}\"},\n")
ENDFOREACH(FUNCTION)
FILE(APPEND ${LIBBTKC_PATH} "};\n\nint C2F(lib${SCILAB_TOOLBOX_NAME})()\n{\n  Rhs = Max(0, Rhs);\n  (*(Tab[Fin-1].f))(Tab[Fin-1].name,Tab[Fin-1].F);\n  return 0;\n}")

# Include
INCLUDE_DIRECTORIES("${SCILAB_MEX_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${SCILAB_CORE_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${BTK_SOURCE_DIR}/Wrapping/Matlab/")

# Build the library
SET(SCILAB_SRCS "lib${SCILAB_TOOLBOX_NAME}.c" ${SCILAB_MEX_SRCS})
ADD_LIBRARY(${SCILAB_TOOLBOX_NAME} SHARED ${SCILAB_SRCS} ${SCILAB_CXX_SRCS})
FOREACH(FUNCTION ${SCILAB_SRCS})
  GET_FILENAME_COMPONENT(FUNC ${FUNCTION} NAME_WE)
  SET_SOURCE_FILES_PROPERTIES(${FUNCTION} PROPERTIES COMPILE_FLAGS "-DmexFunction=mex_${FUNC}")
ENDFOREACH(FUNCTION)
SET_TARGET_PROPERTIES(${SCILAB_TOOLBOX_NAME} PROPERTIES PREFIX "lib")
TARGET_LINK_LIBRARIES(${SCILAB_TOOLBOX_NAME} ${SCILAB_IMPL_LIBRARY} BTKCommon BTKIO BTKBasicFilters)
IF(MSVC)
  # Generate the DEF file (instead of the use of Dumpexts provided with Scilab)
  SET(LIBBTKDEF_PATH "${CMAKE_BINARY_DIR}/Wrapping/Scilab/lib${SCILAB_TOOLBOX_NAME}.def")
  FILE(WRITE ${LIBBTKDEF_PATH} "LIBRARY    lib${SCILAB_TOOLBOX_NAME}.dll\nEXPORTS\n")
  FILE(APPEND ${LIBBTKDEF_PATH} "\tlib${SCILAB_TOOLBOX_NAME}_\n")
  FOREACH(FUNCTION ${SCILAB_MEX_SRCS})
    GET_FILENAME_COMPONENT(FUNC ${FUNCTION} NAME_WE)
    FILE(APPEND ${LIBBTKDEF_PATH} "\tmex_${FUNC}\n")
  ENDFOREACH(FUNCTION)
  # Supplementary flags for MSVC
  SET_TARGET_PROPERTIES(${SCILAB_TOOLBOX_NAME} PROPERTIES COMPILE_FLAGS "/D__MSC__ /DSTRICT /D_CRT_SECURE_NO_DEPRECATE /D__MAKEFILEVC__ /DFORDLL")  
  SET_TARGET_PROPERTIES(${SCILAB_TOOLBOX_NAME} PROPERTIES LINK_FLAGS "/DEF:\"${LIBBTKDEF_PATH}\"")
ENDIF(MSVC)

# Generate the associated Loader.sce
SET(GATEWAY_LOADER "${CMAKE_BINARY_DIR}/bin/loader.sce")
FILE(WRITE ${GATEWAY_LOADER} "lib${SCILAB_TOOLBOX_NAME}_path = get_file_path('loader.sce');\nlist_functions = [\n")
FOREACH(FUNCTION ${SCILAB_MEX_SRCS})
  GET_FILENAME_COMPONENT(FUNC ${FUNCTION} NAME_WE)
  FILE(APPEND ${GATEWAY_LOADER} "  '${FUNC}';\n")
ENDFOREACH(FUNCTION)
FILE(APPEND ${GATEWAY_LOADER} "];\naddinter(lib${SCILAB_TOOLBOX_NAME}_path+'/lib${SCILAB_TOOLBOX_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}','lib${SCILAB_TOOLBOX_NAME}',list_functions);\nclear lib${SCILAB_TOOLBOX_NAME}_path;\nclear list_functions;\nclear get_file_path;\n")

ENDIF(SCILAB_ROOT)

IF(NOT BTK_INSTALL_NO_DEVELOPMENT)
  
ENDIF(NOT BTK_INSTALL_NO_DEVELOPMENT)

